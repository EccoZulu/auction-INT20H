{"ast":null,"code":"var _jsxFileName = \"F:\\\\e-Auction\\\\frontend\\\\src\\\\components\\\\Login\\\\SocialScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Button, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { discord, github, google } from '../../actions/socialActions';\nimport { socialLogin } from '../../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SocialScreen() {\n  _s();\n  const {\n    socialParams\n  } = useParams();\n  const discordLogin = () => {\n    const discordBaseURL = 'https://discord.com/api/oauth2';\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_KEY;\n    const redirectURI = `${baseURL}/login/discord`;\n    const getCodeURL = `${discordBaseURL}/authorize?client_id=${clientID}&redirect_uri=${redirectURI}&response_type=code&scope=email%20identify`;\n    window.location.assign(getCodeURL);\n  };\n  const githubLogin = () => {\n    const githubBaseURL = 'https://github.com/login/oauth';\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_GITHUB_KEY;\n    const redirectURI = `${baseURL}/login/github`;\n    const getCodeURL = `${githubBaseURL}/authorize?client_id=${clientID}&redirect_uri=${redirectURI}&scope=user`;\n    window.location.assign(getCodeURL);\n  };\n  const googleLogin = () => {\n    const googleBaseURL = 'https://accounts.google.com/o/oauth2/v2/auth';\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY;\n    const redirectURI = `${baseURL}/login/google-oauth2`;\n    const getCodeURL = `${googleBaseURL}?redirect_uri=${redirectURI}&prompt=consent&response_type=code&client_id=${clientID}&scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile&access_type=offline`;\n    window.location.assign(getCodeURL);\n  };\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const code = searchParams.get('code');\n  useEffect(() => {\n    if (socialParams === 'discord') {\n      dispatch(discord(code));\n    } else if (socialParams === 'github') {\n      dispatch(github(code));\n    } else if (socialParams === 'google-oauth2') {\n      dispatch(google(code));\n    }\n  }, [socialParams, dispatch, code]);\n  const {\n    socialReducers: {\n      social\n    }\n  } = useSelector(state => state);\n  useEffect(() => {\n    if (social && social.access_token) {\n      dispatch(socialLogin(socialParams, social.access_token));\n    }\n  }, [dispatch, social, socialParams]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"pt-3 justify-content-evenly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SocialScreen, \"YCh1mMsskP1iDwdQGRrAqlpOhnE=\", false, function () {\n  return [useParams, useDispatch, useSearchParams, useSelector];\n});\n_c = SocialScreen;\nexport default SocialScreen;\nvar _c;\n$RefreshReg$(_c, \"SocialScreen\");","map":{"version":3,"names":["React","useEffect","Button","Row","useDispatch","useSelector","useParams","useSearchParams","discord","github","google","socialLogin","jsxDEV","_jsxDEV","Fragment","_Fragment","SocialScreen","_s","socialParams","discordLogin","discordBaseURL","clientID","process","env","REACT_APP_SOCIAL_AUTH_DISCORD_KEY","redirectURI","baseURL","getCodeURL","window","location","assign","githubLogin","githubBaseURL","REACT_APP_SOCIAL_AUTH_GITHUB_KEY","googleLogin","googleBaseURL","REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY","dispatch","searchParams","code","get","socialReducers","social","state","access_token","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/e-Auction/frontend/src/components/Login/SocialScreen.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Button, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, useSearchParams } from 'react-router-dom'\r\nimport { discord, github, google } from '../../actions/socialActions'\r\nimport { socialLogin } from '../../actions/userActions'\r\n\r\nfunction SocialScreen() {\r\n\r\n    const { socialParams } = useParams()\r\n\r\n    const discordLogin = () => {\r\n        const discordBaseURL = 'https://discord.com/api/oauth2'\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_KEY\r\n        const redirectURI = `${baseURL}/login/discord`\r\n        const getCodeURL = `${discordBaseURL}/authorize?client_id=${clientID}&redirect_uri=${redirectURI}&response_type=code&scope=email%20identify`\r\n\r\n        window.location.assign(getCodeURL)\r\n    }\r\n\r\n    const githubLogin = () => {\r\n        const githubBaseURL = 'https://github.com/login/oauth'\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_GITHUB_KEY\r\n        const redirectURI = `${baseURL}/login/github`\r\n        const getCodeURL = `${githubBaseURL}/authorize?client_id=${clientID}&redirect_uri=${redirectURI}&scope=user`\r\n\r\n        window.location.assign(getCodeURL)\r\n    }\r\n\r\n    const googleLogin = () => {\r\n        const googleBaseURL = 'https://accounts.google.com/o/oauth2/v2/auth'\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\r\n        const redirectURI = `${baseURL}/login/google-oauth2`\r\n        const getCodeURL = `${googleBaseURL}?redirect_uri=${redirectURI}&prompt=consent&response_type=code&client_id=${clientID}&scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile&access_type=offline`\r\n\r\n        window.location.assign(getCodeURL)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const [searchParams] = useSearchParams()\r\n    const code = searchParams.get('code')\r\n\r\n    useEffect(() => {\r\n        if(socialParams === 'discord'){\r\n            dispatch(discord(code))\r\n        }else if (socialParams === 'github'){\r\n            dispatch(github(code))\r\n        }\r\n        else if (socialParams === 'google-oauth2'){\r\n            dispatch(google(code))\r\n        }\r\n    }, [socialParams, dispatch, code])\r\n\r\n    const {\r\n        socialReducers: { social }\r\n    } = useSelector((state) => state)\r\n\r\n    useEffect(() => {\r\n        if(social && social.access_token){\r\n            dispatch(socialLogin(socialParams, social.access_token))\r\n        }\r\n    }, [dispatch, social, socialParams])\r\n\r\n    return (\r\n        <>\r\n            <Row className='pt-3 justify-content-evenly'>\r\n               \r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocialScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}