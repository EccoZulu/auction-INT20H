{"ast":null,"code":"var _jsxFileName = \"F:\\\\e-Auction\\\\frontend\\\\src\\\\components\\\\Profile\\\\Screens\\\\BidScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Col, ListGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listBids } from '../../../actions/bidActions';\nimport Loader from '../../Loader';\nimport BidGroup from '../Bid/BidGroup';\nimport SingleBid from '../Bid/SingleBid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BidScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    bidReducers: {\n      bids,\n      loading\n    }\n  } = useSelector(state => state);\n  const [groupedBids, setGroupedBids] = useState([]);\n  useEffect(() => {\n    const bidsGroupedByProduct = bids.reduce((grouped, bid) => {\n      if (!grouped[bid.product]) grouped[bid.product] = [];\n      grouped[bid.product].push(bid);\n      return grouped;\n    }, {});\n    setGroupedBids(bidsGroupedByProduct);\n  }, [bids]);\n  const [activeProductId, setActiveProductId] = useState(null);\n  const toggleProduct = useCallback(productId => {\n    setActiveProductId(currentId => currentId === productId ? null : productId);\n  }, []);\n  useEffect(() => {\n    dispatch(listBids());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mx-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"h4 text-center\",\n        children: \"My Bid List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"d-flex justify-content-center mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mx-3\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this) : Object.entries(groupedBids).map(_ref => {\n        let [productId, bids] = _ref;\n        return bids.length > 1 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n          defaultActiveKey: productId,\n          variant: 'flush',\n          className: \"rounded\",\n          children: /*#__PURE__*/_jsxDEV(BidGroup, {\n            bids: bids,\n            productId: productId,\n            activeProductId: activeProductId,\n            onToggleProduct: toggleProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n          defaultActiveKey: productId,\n          variant: 'flush',\n          className: \"rounded\",\n          children: /*#__PURE__*/_jsxDEV(SingleBid, {\n            bid: bids[0],\n            isSingle: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(BidScreen, \"7w4vRitgXcUAamFxZPmgZfLyc/s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = BidScreen;\nexport default BidScreen;\nvar _c;\n$RefreshReg$(_c, \"BidScreen\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Col","ListGroup","Row","useDispatch","useSelector","listBids","Loader","BidGroup","SingleBid","jsxDEV","_jsxDEV","Fragment","_Fragment","BidScreen","_s","dispatch","bidReducers","bids","loading","state","groupedBids","setGroupedBids","bidsGroupedByProduct","reduce","grouped","bid","product","push","activeProductId","setActiveProductId","toggleProduct","productId","currentId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","_ref","length","defaultActiveKey","variant","onToggleProduct","isSingle","_c","$RefreshReg$"],"sources":["F:/e-Auction/frontend/src/components/Profile/Screens/BidScreen.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Col, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listBids } from '../../../actions/bidActions'\r\nimport Loader from '../../Loader'\r\nimport BidGroup from '../Bid/BidGroup'\r\nimport SingleBid from '../Bid/SingleBid'\r\n\r\nfunction BidScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    bidReducers: { bids, loading }\r\n  } = useSelector((state) => state)\r\n\r\n  const [groupedBids, setGroupedBids] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const bidsGroupedByProduct = bids.reduce((grouped, bid) => {\r\n          if (!grouped[bid.product]) grouped[bid.product] = [];\r\n          grouped[bid.product].push(bid);\r\n          return grouped;\r\n      }, {});\r\n\r\n      setGroupedBids(bidsGroupedByProduct)\r\n\r\n  }, [bids]);\r\n\r\n  const [activeProductId, setActiveProductId] = useState(null);\r\n\r\n  const toggleProduct = useCallback((productId) => {\r\n      setActiveProductId(currentId => currentId === productId ? null : productId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(listBids())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n    <Row className='mx-3'>\r\n        <Col className='h4 text-center'>\r\n            My Bid List\r\n        </Col>\r\n    </Row>\r\n    <Col className='d-flex justify-content-center mb-2'>\r\n        <hr className='divider'/>\r\n    </Col>   \r\n    <Row className='mx-3'>\r\n        {loading ? <Loader /> :\r\n          Object.entries(groupedBids).map(([productId, bids]) => bids.length > 1 \r\n          ? \r\n          <ListGroup defaultActiveKey={productId} variant={'flush'} className='rounded'>\r\n            <BidGroup\r\n                bids={bids}\r\n                productId={productId}\r\n                activeProductId={activeProductId}\r\n                onToggleProduct={toggleProduct}\r\n            />\r\n          </ListGroup>\r\n          : \r\n          <ListGroup defaultActiveKey={productId} variant={'flush'} className='rounded'>\r\n            <SingleBid \r\n                bid={bids[0]}\r\n                isSingle={true}\r\n              />\r\n          </ListGroup>\r\n          )\r\n        }\r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BidScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}