{"ast":null,"code":"import axios from \"axios\";\nimport { socialLoginFail, socialLoginRequest, socialLoginSuccess } from \"../reducers/socialReducers\";\nexport const discord = code => async dispatch => {\n  try {\n    dispatch(socialLoginRequest());\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_KEY;\n    const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_SECRET;\n    const {\n      data\n    } = await axios.post('https://discord.com/api/oauth2/token', {\n      'client_id': clientID,\n      'client_secret': clientSecret,\n      'grant_type': 'authorization_code',\n      'code': code,\n      'redirect_uri': `${process.env.REACT_APP_BASE_URL}/login/discord`\n    }, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    dispatch(socialLoginSuccess(data));\n  } catch (error) {\n    dispatch(socialLoginFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const github = code => async dispatch => {\n  try {\n    dispatch(socialLoginRequest());\n    const {\n      data\n    } = await axios.post(`${process.env.REACT_APP_BASE_API_URL}/api/users/github/`, {\n      'code': code\n    });\n    dispatch(socialLoginSuccess(data));\n  } catch (error) {\n    dispatch(socialLoginFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const google = code => async dispatch => {\n  try {\n    dispatch(socialLoginRequest());\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY;\n    const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET;\n    const {\n      data\n    } = await axios.post('https://oauth2.googleapis.com/token', {\n      'code': code,\n      'redirect_uri': `${process.env.REACT_APP_BASE_URL}/login/google-oauth2`,\n      'client_id': clientID,\n      'client_secret': clientSecret,\n      'grant_type': 'authorization_code'\n    }, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    dispatch(socialLoginSuccess(data));\n  } catch (error) {\n    dispatch(socialLoginFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};","map":{"version":3,"names":["axios","socialLoginFail","socialLoginRequest","socialLoginSuccess","discord","code","dispatch","clientID","process","env","REACT_APP_SOCIAL_AUTH_DISCORD_KEY","clientSecret","REACT_APP_SOCIAL_AUTH_DISCORD_SECRET","data","post","REACT_APP_BASE_URL","headers","error","response","detail","message","github","REACT_APP_BASE_API_URL","google","REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY","REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET"],"sources":["F:/e-Auction/frontend/src/actions/socialActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { socialLoginFail, socialLoginRequest, socialLoginSuccess } from \"../reducers/socialReducers\";\r\n\r\nexport const discord = (code) => async (dispatch) => {\r\n    try {\r\n        dispatch(socialLoginRequest())\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_KEY\r\n        const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_SECRET\r\n\r\n        const { data } = await axios.post(\r\n            'https://discord.com/api/oauth2/token',\r\n            {\r\n                'client_id': clientID,\r\n                'client_secret': clientSecret,\r\n                'grant_type': 'authorization_code',\r\n                'code': code,\r\n                'redirect_uri': `${process.env.REACT_APP_BASE_URL}/login/discord`,\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }\r\n            }\r\n        )\r\n        dispatch(socialLoginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(socialLoginFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\n\r\nexport const github = (code) => async (dispatch) => {\r\n    try {\r\n        dispatch(socialLoginRequest())\r\n\r\n        const { data } = await axios.post(\r\n            `${process.env.REACT_APP_BASE_API_URL}/api/users/github/`,\r\n            {\r\n                'code': code,\r\n            }\r\n        )\r\n        dispatch(socialLoginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(socialLoginFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\n\r\nexport const google = (code) => async (dispatch) => {\r\n    try {\r\n        dispatch(socialLoginRequest())\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\r\n        const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET\r\n\r\n        const { data } = await axios.post(\r\n            'https://oauth2.googleapis.com/token',\r\n            {\r\n                'code': code,\r\n                'redirect_uri': `${process.env.REACT_APP_BASE_URL}/login/google-oauth2`,\r\n                'client_id': clientID,\r\n                'client_secret': clientSecret,\r\n                'grant_type': 'authorization_code',\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }\r\n            }\r\n        )\r\n        dispatch(socialLoginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(socialLoginFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}