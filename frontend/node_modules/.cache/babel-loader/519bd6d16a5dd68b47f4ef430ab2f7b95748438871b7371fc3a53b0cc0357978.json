{"ast":null,"code":"import axios from \"axios\";\nimport { socialLoginFail, socialLoginRequest, socialLoginSuccess } from \"../reducers/socialReducers\";\nconst baseURL = process.env.REACT_APP_BASE_API_URL || 'http://127.0.0.1:8000';\nexport const discord = code => async dispatch => {\n  try {\n    dispatch(socialLoginRequest());\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_KEY;\n    const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_SECRET;\n    const {\n      data\n    } = await axios.post('https://discord.com/api/oauth2/token', {\n      'client_id': clientID,\n      'client_secret': clientSecret,\n      'grant_type': 'authorization_code',\n      'code': code,\n      'redirect_uri': `${baseURL}/login/discord`\n    }, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    dispatch(socialLoginSuccess(data));\n  } catch (error) {\n    dispatch(socialLoginFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const github = code => async dispatch => {\n  try {\n    dispatch(socialLoginRequest());\n    const {\n      data\n    } = await axios.post(`${baseURL}/api/users/github/`, {\n      'code': code\n    });\n    dispatch(socialLoginSuccess(data));\n  } catch (error) {\n    dispatch(socialLoginFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const google = code => async dispatch => {\n  try {\n    dispatch(socialLoginRequest());\n    const clientID = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY;\n    const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET;\n    const {\n      data\n    } = await axios.post('https://oauth2.googleapis.com/token', {\n      'code': code,\n      'redirect_uri': `${baseURL}/login/google-oauth2`,\n      'client_id': clientID,\n      'client_secret': clientSecret,\n      'grant_type': 'authorization_code'\n    }, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    dispatch(socialLoginSuccess(data));\n  } catch (error) {\n    dispatch(socialLoginFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};","map":{"version":3,"names":["axios","socialLoginFail","socialLoginRequest","socialLoginSuccess","baseURL","process","env","REACT_APP_BASE_API_URL","discord","code","dispatch","clientID","REACT_APP_SOCIAL_AUTH_DISCORD_KEY","clientSecret","REACT_APP_SOCIAL_AUTH_DISCORD_SECRET","data","post","headers","error","response","detail","message","github","google","REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY","REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET"],"sources":["F:/e-Auction/frontend/src/actions/socialActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { socialLoginFail, socialLoginRequest, socialLoginSuccess } from \"../reducers/socialReducers\";\r\nconst baseURL = process.env.REACT_APP_BASE_API_URL || 'http://127.0.0.1:8000';\r\nexport const discord = (code) => async (dispatch) => {\r\n    try {\r\n        dispatch(socialLoginRequest())\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_KEY\r\n        const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_DISCORD_SECRET\r\n\r\n        const { data } = await axios.post(\r\n            'https://discord.com/api/oauth2/token',\r\n            {\r\n                'client_id': clientID,\r\n                'client_secret': clientSecret,\r\n                'grant_type': 'authorization_code',\r\n                'code': code,\r\n                'redirect_uri': `${baseURL}/login/discord`,\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }\r\n            }\r\n        )\r\n        dispatch(socialLoginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(socialLoginFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\n\r\nexport const github = (code) => async (dispatch) => {\r\n    try {\r\n        dispatch(socialLoginRequest())\r\n\r\n        const { data } = await axios.post(\r\n            `${baseURL}/api/users/github/`,\r\n            {\r\n                'code': code,\r\n            }\r\n        )\r\n        dispatch(socialLoginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(socialLoginFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\n\r\nexport const google = (code) => async (dispatch) => {\r\n    try {\r\n        dispatch(socialLoginRequest())\r\n        const clientID = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\r\n        const clientSecret = process.env.REACT_APP_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET\r\n\r\n        const { data } = await axios.post(\r\n            'https://oauth2.googleapis.com/token',\r\n            {\r\n                'code': code,\r\n                'redirect_uri': `${baseURL}/login/google-oauth2`,\r\n                'client_id': clientID,\r\n                'client_secret': clientSecret,\r\n                'grant_type': 'authorization_code',\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }\r\n            }\r\n        )\r\n        dispatch(socialLoginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(socialLoginFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}