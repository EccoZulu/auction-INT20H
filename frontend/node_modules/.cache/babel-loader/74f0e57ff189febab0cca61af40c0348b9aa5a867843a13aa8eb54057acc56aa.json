{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const addressSlice = createSlice({\n  name: 'addressReducers',\n  initialState: {\n    loading: false,\n    success: false,\n    error: null,\n    address: null,\n    addresses: null\n  },\n  reducers: {\n    // Addresses\n    addressListRequest: state => {\n      state.loading = true;\n    },\n    addressListSuccess: (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.addresses = action.payload;\n    },\n    addressListFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Address\n    addressDetailRequest: state => {\n      state.addressDetailLoading = true;\n    },\n    addressDetailSuccess: (state, action) => {\n      state.addressDetailLoading = false;\n      state.addressDetailSuccess = true;\n      state.address = action.payload;\n    },\n    addressDetailFail: (state, action) => {\n      state.addressDetailLoading = false;\n      state.addressDetailError = action.payload;\n    },\n    // Update Address\n    addressUpdateRequest: state => {\n      state.addressUpdateLoading = true;\n    },\n    addressUpdateSuccess: (state, action) => {\n      state.addressUpdateLoading = false;\n      state.addressUpdateSuccess = true;\n      state.address = action.payload;\n    },\n    addressUpdateFail: (state, action) => {\n      state.addressUpdateLoading = false;\n      state.addressUpdateError = action.payload;\n    },\n    // Delete Address\n    addressDeleteRequest: state => {\n      state.addressDeleteLoading = true;\n    },\n    addressDeleteSuccess: (state, action) => {\n      state.addressDeleteLoading = false;\n      state.addressDeleteSuccess = true;\n      state.addresses = state.addresses.filter(address => address._id !== action.payload._id);\n    },\n    addressDeleteFail: (state, action) => {\n      state.addressDeleteLoading = false;\n      state.addressDeleteError = action.payload;\n    },\n    // Create Address\n    addressCreateRequest: state => {\n      state.addressCreateLoading = true;\n    },\n    addressCreateSuccess: (state, action) => {\n      state.addressCreateLoading = false;\n      state.addressCreateSuccess = true;\n      state.addresses = [...state.addresses, action.payload];\n    },\n    addressCreateFail: (state, action) => {\n      state.addressCreateLoading = false;\n      state.addressCreateError = action.payload;\n    },\n    // Reset Actions\n    addressListReset: state => {\n      state.loading = false;\n      state.success = false;\n      state.error = null;\n    },\n    addressDetailReset: state => {\n      state.addressDetailLoading = false;\n      state.addressDetailSuccess = false;\n      state.addressDetailError = null;\n    },\n    addressUpdateReset: state => {\n      state.addressUpdateLoading = false;\n      state.addressUpdateSuccess = false;\n      state.addressUpdateError = null;\n    },\n    addressDeleteReset: state => {\n      state.addressDeleteLoading = false;\n      state.addressDeleteSuccess = false;\n      state.addressDeleteError = null;\n    },\n    addressCreateReset: state => {\n      state.addressCreateLoading = false;\n      state.addressCreateSuccess = false;\n      state.addressCreateError = null;\n    },\n    // Reset Slice\n    addressSliceReset: state => {\n      state.loading = false;\n      state.success = false;\n      state.error = null;\n      state.address = null;\n      state.addresses = null;\n      state.addressDetailLoading = false;\n      state.addressDetailSuccess = false;\n      state.addressDetailError = null;\n      state.addressUpdateLoading = false;\n      state.addressUpdateSuccess = false;\n      state.addressUpdateError = null;\n      state.addressDeleteLoading = false;\n      state.addressDeleteSuccess = false;\n      state.addressDeleteError = null;\n      state.addressCreateLoading = false;\n      state.addressCreateSuccess = false;\n      state.addressCreateError = null;\n    }\n  }\n});\nexport const {\n  addressListRequest,\n  addressListSuccess,\n  addressListFail,\n  addressListReset,\n  addressDetailRequest,\n  addressDetailSuccess,\n  addressDetailFail,\n  addressDetailReset,\n  addressUpdateRequest,\n  addressUpdateSuccess,\n  addressUpdateFail,\n  addressUpdateReset,\n  addressDeleteRequest,\n  addressDeleteSuccess,\n  addressDeleteFail,\n  addressDeleteReset,\n  addressCreateRequest,\n  addressCreateSuccess,\n  addressCreateFail,\n  addressCreateReset,\n  addressSliceReset\n} = addressSlice.actions;","map":{"version":3,"names":["createSlice","addressSlice","name","initialState","loading","success","error","address","addresses","reducers","addressListRequest","state","addressListSuccess","action","payload","addressListFail","addressDetailRequest","addressDetailLoading","addressDetailSuccess","addressDetailFail","addressDetailError","addressUpdateRequest","addressUpdateLoading","addressUpdateSuccess","addressUpdateFail","addressUpdateError","addressDeleteRequest","addressDeleteLoading","addressDeleteSuccess","filter","_id","addressDeleteFail","addressDeleteError","addressCreateRequest","addressCreateLoading","addressCreateSuccess","addressCreateFail","addressCreateError","addressListReset","addressDetailReset","addressUpdateReset","addressDeleteReset","addressCreateReset","addressSliceReset","actions"],"sources":["F:/e-Auction/frontend/src/reducers/addressReducers.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addressSlice = createSlice({\r\n    name: 'addressReducers',\r\n    initialState: {\r\n        loading: false,\r\n        success: false,\r\n        error: null,\r\n        address: null,\r\n        addresses: null\r\n    },\r\n    reducers: {\r\n\r\n        // Addresses\r\n        addressListRequest: (state) => { state.loading = true },\r\n        addressListSuccess: (state, action) => { state.loading = false; state.success = true; state.addresses = action.payload },\r\n        addressListFail: (state, action) => { state.loading = false; state.error = action.payload },\r\n\r\n        // Address\r\n        addressDetailRequest: (state) => { state.addressDetailLoading = true },\r\n        addressDetailSuccess: (state, action) => { state.addressDetailLoading = false; state.addressDetailSuccess = true; state.address = action.payload },\r\n        addressDetailFail: (state, action) => { state.addressDetailLoading = false; state.addressDetailError = action.payload },\r\n\r\n        // Update Address\r\n        addressUpdateRequest: (state) => { state.addressUpdateLoading = true },\r\n        addressUpdateSuccess: (state, action) => { state.addressUpdateLoading = false; state.addressUpdateSuccess = true; state.address = action.payload},\r\n        addressUpdateFail: (state, action) => { state.addressUpdateLoading = false; state.addressUpdateError = action.payload},\r\n\r\n        // Delete Address\r\n        addressDeleteRequest: (state) => { state.addressDeleteLoading = true },\r\n        addressDeleteSuccess: (state, action) => { state.addressDeleteLoading = false; state.addressDeleteSuccess = true; state.addresses = state.addresses.filter((address) => address._id !== action.payload._id) },\r\n        addressDeleteFail: (state, action) => { state.addressDeleteLoading = false; state.addressDeleteError = action.payload},\r\n\r\n        // Create Address\r\n        addressCreateRequest: (state) => { state.addressCreateLoading = true },\r\n        addressCreateSuccess: (state, action) => { state.addressCreateLoading = false; state.addressCreateSuccess = true; state.addresses = [...state.addresses, action.payload] },\r\n        addressCreateFail: (state, action) => { state.addressCreateLoading = false; state.addressCreateError = action.payload},\r\n\r\n        // Reset Actions\r\n        addressListReset: (state) => { state.loading = false; state.success = false; state.error = null },\r\n        addressDetailReset: (state) => { state.addressDetailLoading = false; state.addressDetailSuccess = false; state.addressDetailError = null },\r\n        addressUpdateReset: (state) => { state.addressUpdateLoading = false; state.addressUpdateSuccess = false; state.addressUpdateError = null },\r\n        addressDeleteReset: (state) => { state.addressDeleteLoading = false; state.addressDeleteSuccess = false; state.addressDeleteError = null },\r\n        addressCreateReset: (state) => { state.addressCreateLoading = false; state.addressCreateSuccess = false; state.addressCreateError = null },\r\n\r\n        // Reset Slice\r\n        addressSliceReset: (state) => {\r\n            state.loading = false; state.success = false; state.error = null; state.address = null; state.addresses = null;\r\n            state.addressDetailLoading = false; state.addressDetailSuccess = false; state.addressDetailError = null;\r\n            state.addressUpdateLoading = false; state.addressUpdateSuccess = false; state.addressUpdateError = null;\r\n            state.addressDeleteLoading = false; state.addressDeleteSuccess = false; state.addressDeleteError = null;\r\n            state.addressCreateLoading = false; state.addressCreateSuccess = false; state.addressCreateError = null\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    addressListRequest,\r\n    addressListSuccess,\r\n    addressListFail,\r\n    addressListReset,\r\n\r\n    addressDetailRequest,\r\n    addressDetailSuccess,\r\n    addressDetailFail,\r\n    addressDetailReset,\r\n\r\n    addressUpdateRequest,\r\n    addressUpdateSuccess,\r\n    addressUpdateFail,\r\n    addressUpdateReset,\r\n\r\n    addressDeleteRequest,\r\n    addressDeleteSuccess,\r\n    addressDeleteFail,\r\n    addressDeleteReset,\r\n\r\n    addressCreateRequest,\r\n    addressCreateSuccess,\r\n    addressCreateFail,\r\n    addressCreateReset,\r\n\r\n    addressSliceReset,\r\n} = addressSlice.actions;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}