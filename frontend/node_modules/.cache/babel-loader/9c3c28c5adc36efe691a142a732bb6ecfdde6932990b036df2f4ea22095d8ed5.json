{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const bidSlice = createSlice({\n  name: 'bidReducers',\n  initialState: {\n    loading: false,\n    success: false,\n    error: null,\n    bids: [],\n    bid: {}\n  },\n  reducers: {\n    // Bids\n    bidListRequest: state => {\n      state.loading = true;\n    },\n    bidListSuccess: (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.bids = action.payload;\n    },\n    bidListFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Place a Bid\n    bidPlaceRequest: state => {\n      state.bidPlaceLoading = true;\n    },\n    bidPlaceSuccess: (state, action) => {\n      state.bidPlaceLoading = false;\n      state.bid = action.payload;\n      state.bidPlaceSuccess = true;\n    },\n    bidPlaceFail: (state, action) => {\n      state.bidPlaceLoading = false;\n      state.bidPlaceError = action.payload;\n    },\n    // Calculate Paid Amount\n    bidPaidRequest: state => {\n      state.bidPaidLoading = true;\n    },\n    bidPaidSuccess: (state, action) => {\n      state.bidPaidLoading = false;\n      state.bid = action.payload;\n      state.bidPaidSuccess = true;\n    },\n    bidPaidFail: (state, action) => {\n      state.bidPaidLoading = false;\n      state.bidPaidError = action.payload;\n    },\n    // Product Bids List\n    bidProductRequest: state => {\n      state.bidProductLoading = true;\n    },\n    bidProductSuccess: (state, action) => {\n      state.bidProductLoading = false;\n      state.bids = action.payload;\n      state.bidProductSuccess = true;\n    },\n    bidProductFail: (state, action) => {\n      state.bidProductLoading = false;\n      state.bidProductError = action.payload;\n    },\n    // Reset Actions\n    bidListReset: state => {\n      state.loading = false;\n      state.success = false;\n      state.error = null;\n    },\n    bidPlaceReset: state => {\n      state.bidPlaceLoading = false;\n      state.bidPlaceSuccess = false;\n      state.bidPlaceError = null;\n    },\n    bidPaidReset: state => {\n      state.bidPaidLoading = false;\n      state.bidPaidSuccess = false;\n      state.bidPaidError = null;\n    },\n    bidProductReset: state => {\n      state.bidProductLoading = false;\n      state.bidProductSuccess = false;\n      state.bidProductError = null;\n    },\n    // Reset Slice\n    bidSliceReset: state => {\n      state.loading = false;\n      state.success = false;\n      state.error = null;\n      state.bids = null;\n      state.bid = null;\n      state.bidPlaceLoading = false;\n      state.bidPlaceSuccess = false;\n      state.bidPlaceError = null;\n      state.bidPaidLoading = false;\n      state.bidPaidSuccess = false;\n      state.bidPaidError = null;\n      state.bidProductLoading = false;\n      state.bidProductSuccess = false;\n      state.bidProductError = null;\n    }\n  }\n});\nexport const {\n  bidListRequest,\n  bidListSuccess,\n  bidListFail,\n  bidListReset,\n  bidPlaceRequest,\n  bidPlaceSuccess,\n  bidPlaceFail,\n  bidPlaceReset,\n  bidPaidRequest,\n  bidPaidSuccess,\n  bidPaidFail,\n  bidPaidReset,\n  bidProductRequest,\n  bidProductSuccess,\n  bidProductFail,\n  bidProductReset,\n  bidSliceReset\n} = bidSlice.actions;","map":{"version":3,"names":["createSlice","bidSlice","name","initialState","loading","success","error","bids","bid","reducers","bidListRequest","state","bidListSuccess","action","payload","bidListFail","bidPlaceRequest","bidPlaceLoading","bidPlaceSuccess","bidPlaceFail","bidPlaceError","bidPaidRequest","bidPaidLoading","bidPaidSuccess","bidPaidFail","bidPaidError","bidProductRequest","bidProductLoading","bidProductSuccess","bidProductFail","bidProductError","bidListReset","bidPlaceReset","bidPaidReset","bidProductReset","bidSliceReset","actions"],"sources":["F:/e-Auction/frontend/src/reducers/bidReducers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const bidSlice = createSlice({\r\n    name: 'bidReducers',\r\n    initialState: {\r\n        loading: false,\r\n        success: false,\r\n        error: null,\r\n        bids: [],\r\n        bid: {}\r\n    },\r\n    reducers: {\r\n        \r\n        // Bids\r\n        bidListRequest: (state) => { state.loading = true },\r\n        bidListSuccess: (state,action) => { state.loading = false; state.success = true; state.bids = action.payload },\r\n        bidListFail: (state,action) => { state.loading = false; state.error = action.payload },\r\n\r\n        // Place a Bid\r\n        bidPlaceRequest: (state) => { state.bidPlaceLoading = true },\r\n        bidPlaceSuccess: (state,action) => { state.bidPlaceLoading = false; state.bid = action.payload; state.bidPlaceSuccess = true },\r\n        bidPlaceFail: (state,action) => { state.bidPlaceLoading = false; state.bidPlaceError = action.payload },\r\n\r\n        // Calculate Paid Amount\r\n        bidPaidRequest: (state) => { state.bidPaidLoading = true },\r\n        bidPaidSuccess: (state,action) => { state.bidPaidLoading = false; state.bid = action.payload; state.bidPaidSuccess = true },\r\n        bidPaidFail: (state,action) => { state.bidPaidLoading = false; state.bidPaidError = action.payload },\r\n\r\n        // Product Bids List\r\n        bidProductRequest: (state) => { state.bidProductLoading = true },\r\n        bidProductSuccess: (state,action) => { state.bidProductLoading = false; state.bids = action.payload; state.bidProductSuccess = true },\r\n        bidProductFail: (state,action) => { state.bidProductLoading = false; state.bidProductError = action.payload },\r\n\r\n        // Reset Actions\r\n        bidListReset: (state) => { state.loading = false; state.success = false; state.error = null },\r\n        bidPlaceReset: (state) => { state.bidPlaceLoading = false; state.bidPlaceSuccess = false; state.bidPlaceError = null },\r\n        bidPaidReset: (state) => { state.bidPaidLoading = false; state.bidPaidSuccess = false; state.bidPaidError = null },\r\n        bidProductReset: (state) => { state.bidProductLoading = false; state.bidProductSuccess = false; state.bidProductError = null },\r\n\r\n\r\n        // Reset Slice\r\n        bidSliceReset: (state) => {\r\n            state.loading = false; state.success = false; state.error = null; state.bids = null; state.bid = null;\r\n            state.bidPlaceLoading = false; state.bidPlaceSuccess = false; state.bidPlaceError = null;\r\n            state.bidPaidLoading = false; state.bidPaidSuccess = false; state.bidPaidError = null\r\n            state.bidProductLoading = false; state.bidProductSuccess = false; state.bidProductError = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    bidListRequest,\r\n    bidListSuccess,\r\n    bidListFail,\r\n    bidListReset,\r\n\r\n    bidPlaceRequest,\r\n    bidPlaceSuccess,\r\n    bidPlaceFail,\r\n    bidPlaceReset,\r\n\r\n    bidPaidRequest,\r\n    bidPaidSuccess,\r\n    bidPaidFail,\r\n    bidPaidReset,\r\n\r\n    bidProductRequest,\r\n    bidProductSuccess,\r\n    bidProductFail,\r\n    bidProductReset,\r\n\r\n    bidSliceReset,\r\n} = bidSlice.actions\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}