{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const orderSlice = createSlice({\n  name: 'orderReducers',\n  initialState: {\n    order: null,\n    orders: null\n  },\n  reducers: {\n    // Buying Orders\n    buyOrderListRequest: state => {\n      state.buyOrderLoading = true;\n    },\n    buyOrderListSuccess: (state, action) => {\n      state.buyOrderLoading = false;\n      state.buyOrderSuccess = true;\n      state.orders = action.payload;\n    },\n    buyOrderListFail: (state, action) => {\n      state.buyOrderLoading = false;\n      state.buyOrderError = action.payload;\n    },\n    // Order Detail\n    orderDetailRequest: state => {\n      state.orderDetailLoading = true;\n    },\n    orderDetailSuccess: (state, action) => {\n      state.orderDetailLoading = false;\n      state.orderDetailSuccess = true;\n      state.order = action.payload;\n    },\n    orderDetailFail: (state, action) => {\n      state.orderDetailLoading = false;\n      state.orderDetailError = action.payload;\n    },\n    // Confirmed Orders\n    confirmedOrderListRequest: state => {\n      state.confirmedOrderLoading = true;\n    },\n    confirmedOrderListSuccess: (state, action) => {\n      state.confirmedOrderLoading = false;\n      state.confirmedOrderSuccess = true;\n      state.orders = action.payload;\n    },\n    confirmedOrderListFail: (state, action) => {\n      state.confirmedOrderLoading = false;\n      state.confirmedOrderError = action.payload;\n    },\n    // Selling Orders\n    sellerOrderListRequest: state => {\n      state.sellerOrderLoading = true;\n    },\n    sellerOrderListSuccess: (state, action) => {\n      state.sellerOrderLoading = false;\n      state.sellerOrderSuccess = true;\n      state.sellerOrders = action.payload;\n    },\n    sellerOrderListFail: (state, action) => {\n      state.sellerOrderLoading = false;\n      state.sellerOrderError = action.payload;\n    },\n    // // Selling Order\n    // sellerOrderDetailRequest: (state) => { state.orderDetailLoading = true },\n    // sellerOrderDetailSuccess: (state,action) => { state.orderDetailLoading = false; state.orderDetailSuccess = true; state.order = action.payload },\n    // sellerOrderDetailFail: (state,action) => { state.orderDetailLoading = false; state.orderDetailError = action.payload },\n\n    // Update Order\n    updateOrderRequest: state => {\n      state.updateOrderLoading = true;\n    },\n    updateOrderSuccess: (state, action) => {\n      state.updateOrderLoading = false;\n      state.updateOrderSuccess = true;\n      state.order = action.payload;\n    },\n    updateOrderFail: (state, action) => {\n      state.updateOrderLoading = false;\n      state.updateOrderError = action.payload;\n    },\n    // Actions Reset\n    buyOrderListReset: state => {\n      state.buyOrderLoading = false;\n      state.buyOrderSuccess = false;\n      state.buyOrderError = null;\n    },\n    orderDetailReset: state => {\n      state.orderDetailLoading = false;\n      state.orderDetailSuccess = false;\n      state.orderDetailError = null;\n    },\n    confirmedOrderListReset: state => {\n      state.confirmedOrderLoading = false;\n      state.confirmedOrderSuccess = false;\n      state.confirmedOrderError = null;\n    },\n    sellerOrderListReset: state => {\n      state.sellerOrderLoading = false;\n      state.sellerOrderSuccess = false;\n      state.sellerOrderError = null;\n    },\n    // sellerOrderDetailReset: (state) => { state.orderDetailLoading = false; state.orderDetailSuccess = false; state.orderDetailError = null },\n    updateOrderReset: state => {\n      state.updateOrderLoading = false;\n      state.updateOrderSuccess = false;\n      state.updateOrderError = null;\n    },\n    // Slice Reset\n    orderSliceReset: state => {\n      state.buyOrderLoading = false;\n      state.buyOrderSuccess = false;\n      state.buyOrderError = null;\n      state.order = null;\n      state.orders = null;\n      state.orderDetailLoading = false;\n      state.orderDetailSuccess = false;\n      state.orderDetailError = null;\n      state.confirmedOrderLoading = false;\n      state.confirmedOrderSuccess = false;\n      state.confirmedOrderError = null;\n      state.sellerOrderLoading = false;\n      state.sellerOrderSuccess = false;\n      state.sellerOrderError = null;\n      state.sellerOrders = null;\n      state.updateOrderLoading = false;\n      state.updateOrderSuccess = false;\n      state.updateOrderError = null;\n    }\n  }\n});\nexport const {\n  buyOrderListRequest,\n  buyOrderListSuccess,\n  buyOrderListFail,\n  buyOrderListReset,\n  orderDetailRequest,\n  orderDetailSuccess,\n  orderDetailFail,\n  orderDetailReset,\n  confirmedOrderListRequest,\n  confirmedOrderListSuccess,\n  confirmedOrderListFail,\n  confirmedOrderListReset,\n  sellerOrderListRequest,\n  sellerOrderListSuccess,\n  sellerOrderListFail,\n  sellerOrderListReset,\n  updateOrderRequest,\n  updateOrderSuccess,\n  updateOrderFail,\n  updateOrderReset,\n  orderSliceReset\n} = orderSlice.actions;","map":{"version":3,"names":["createSlice","orderSlice","name","initialState","order","orders","reducers","buyOrderListRequest","state","buyOrderLoading","buyOrderListSuccess","action","buyOrderSuccess","payload","buyOrderListFail","buyOrderError","orderDetailRequest","orderDetailLoading","orderDetailSuccess","orderDetailFail","orderDetailError","confirmedOrderListRequest","confirmedOrderLoading","confirmedOrderListSuccess","confirmedOrderSuccess","confirmedOrderListFail","confirmedOrderError","sellerOrderListRequest","sellerOrderLoading","sellerOrderListSuccess","sellerOrderSuccess","sellerOrders","sellerOrderListFail","sellerOrderError","updateOrderRequest","updateOrderLoading","updateOrderSuccess","updateOrderFail","updateOrderError","buyOrderListReset","orderDetailReset","confirmedOrderListReset","sellerOrderListReset","updateOrderReset","orderSliceReset","actions"],"sources":["F:/e-Auction/frontend/src/reducers/orderReducers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const orderSlice = createSlice({\r\n    name: 'orderReducers',\r\n    initialState: {\r\n        order: null,\r\n        orders: null,\r\n    },\r\n    reducers: {\r\n\r\n        // Buying Orders\r\n        buyOrderListRequest: (state) => { state.buyOrderLoading = true },\r\n        buyOrderListSuccess: (state,action) => { state.buyOrderLoading = false; state.buyOrderSuccess = true; state.orders = action.payload },\r\n        buyOrderListFail: (state,action) => { state.buyOrderLoading = false; state.buyOrderError = action.payload },\r\n\r\n        // Order Detail\r\n        orderDetailRequest: (state) => { state.orderDetailLoading = true },\r\n        orderDetailSuccess: (state,action) => { state.orderDetailLoading = false; state.orderDetailSuccess = true; state.order = action.payload },\r\n        orderDetailFail: (state,action) => { state.orderDetailLoading = false; state.orderDetailError = action.payload },\r\n\r\n        // Confirmed Orders\r\n        confirmedOrderListRequest: (state) => { state.confirmedOrderLoading = true },\r\n        confirmedOrderListSuccess: (state,action) => { state.confirmedOrderLoading = false; state.confirmedOrderSuccess = true; state.orders = action.payload },\r\n        confirmedOrderListFail: (state,action) => { state.confirmedOrderLoading = false; state.confirmedOrderError = action.payload },\r\n\r\n        // Selling Orders\r\n        sellerOrderListRequest: (state) => { state.sellerOrderLoading = true },\r\n        sellerOrderListSuccess: (state,action) => { state.sellerOrderLoading = false; state.sellerOrderSuccess = true; state.sellerOrders = action.payload },\r\n        sellerOrderListFail: (state,action) => { state.sellerOrderLoading = false; state.sellerOrderError = action.payload },\r\n\r\n        // // Selling Order\r\n        // sellerOrderDetailRequest: (state) => { state.orderDetailLoading = true },\r\n        // sellerOrderDetailSuccess: (state,action) => { state.orderDetailLoading = false; state.orderDetailSuccess = true; state.order = action.payload },\r\n        // sellerOrderDetailFail: (state,action) => { state.orderDetailLoading = false; state.orderDetailError = action.payload },\r\n\r\n        // Update Order\r\n        updateOrderRequest: (state) => { state.updateOrderLoading = true },\r\n        updateOrderSuccess: (state,action) => { state.updateOrderLoading = false; state.updateOrderSuccess = true; state.order = action.payload },\r\n        updateOrderFail: (state,action) => { state.updateOrderLoading = false; state.updateOrderError = action.payload },\r\n\r\n        // Actions Reset\r\n        buyOrderListReset: (state) => { state.buyOrderLoading = false; state.buyOrderSuccess = false; state.buyOrderError = null },\r\n        orderDetailReset: (state) => { state.orderDetailLoading = false; state.orderDetailSuccess = false; state.orderDetailError = null },\r\n        confirmedOrderListReset: (state) => { state.confirmedOrderLoading = false; state.confirmedOrderSuccess = false; state.confirmedOrderError = null },\r\n        sellerOrderListReset: (state) => { state.sellerOrderLoading = false; state.sellerOrderSuccess = false; state.sellerOrderError = null },\r\n        // sellerOrderDetailReset: (state) => { state.orderDetailLoading = false; state.orderDetailSuccess = false; state.orderDetailError = null },\r\n        updateOrderReset: (state) => { state.updateOrderLoading = false; state.updateOrderSuccess = false; state.updateOrderError = null },\r\n\r\n        // Slice Reset\r\n        orderSliceReset: (state) => {\r\n            state.buyOrderLoading = false; state.buyOrderSuccess = false; state.buyOrderError = null; state.order = null; state.orders = null;\r\n            state.orderDetailLoading = false; state.orderDetailSuccess = false; state.orderDetailError = null;\r\n            state.confirmedOrderLoading = false; state.confirmedOrderSuccess = false; state.confirmedOrderError = null;\r\n            state.sellerOrderLoading = false; state.sellerOrderSuccess = false; state.sellerOrderError = null; state.sellerOrders = null;\r\n            state.updateOrderLoading = false; state.updateOrderSuccess = false; state.updateOrderError = null\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const {\r\n\r\n    buyOrderListRequest,\r\n    buyOrderListSuccess,\r\n    buyOrderListFail,\r\n    buyOrderListReset,\r\n\r\n    orderDetailRequest,\r\n    orderDetailSuccess,\r\n    orderDetailFail,\r\n    orderDetailReset,\r\n\r\n    confirmedOrderListRequest,\r\n    confirmedOrderListSuccess,\r\n    confirmedOrderListFail,\r\n    confirmedOrderListReset,\r\n\r\n    sellerOrderListRequest,\r\n    sellerOrderListSuccess,\r\n    sellerOrderListFail,\r\n    sellerOrderListReset,\r\n\r\n    updateOrderRequest,\r\n    updateOrderSuccess,\r\n    updateOrderFail,\r\n    updateOrderReset,\r\n\r\n    orderSliceReset,\r\n\r\n} = orderSlice.actions\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}