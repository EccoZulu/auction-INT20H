{"ast":null,"code":"import axios from \"axios\";\nimport { buyOrderListFail, buyOrderListRequest, buyOrderListSuccess, confirmedOrderListFail, confirmedOrderListRequest, confirmedOrderListSuccess, orderDetailFail, orderDetailRequest, orderDetailSuccess, sellerOrderListFail, sellerOrderListRequest, sellerOrderListSuccess, updateOrderFail, updateOrderRequest, updateOrderSuccess } from \"../reducers/orderReducers\";\nconst createAPIinstance = () => {\n  return axios.create({\n    baseURL: `${process.env.REACT_APP_BASE_API_URL}/api/users/orders`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  });\n};\nexport const buyList = () => async dispatch => {\n  try {\n    dispatch(buyOrderListRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.get('/buying/');\n    dispatch(buyOrderListSuccess(data));\n  } catch (error) {\n    dispatch(buyOrderListFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const updateOrder = (orderID, updatedData) => async dispatch => {\n  try {\n    dispatch(updateOrderRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.put(`/${orderID}`, updatedData);\n    dispatch(updateOrderSuccess(data));\n  } catch (error) {\n    dispatch(updateOrderFail(error.message && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const confirmedList = function () {\n  let status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  let keyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  return async dispatch => {\n    try {\n      dispatch(confirmedOrderListRequest());\n      const api = createAPIinstance();\n      const {\n        data\n      } = await api.get('/buyer/', {\n        params: {\n          'isDelivered': status,\n          'search': keyword\n        }\n      });\n      dispatch(confirmedOrderListSuccess(data));\n    } catch (error) {\n      dispatch(confirmedOrderListFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n    }\n  };\n};\nexport const orderDetail = id => async dispatch => {\n  try {\n    dispatch(orderDetailRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.get(`/${id}`);\n    dispatch(orderDetailSuccess(data));\n  } catch (error) {\n    dispatch(orderDetailFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const sellList = function () {\n  let deliverStatus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  let keyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  let shippingStatus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return async dispatch => {\n    try {\n      dispatch(sellerOrderListRequest());\n      const api = createAPIinstance();\n      const {\n        data\n      } = await api.get('/seller/', {\n        params: {\n          'isDelivered': deliverStatus,\n          'search': keyword,\n          'inShipping': shippingStatus\n        }\n      });\n      dispatch(sellerOrderListSuccess(data));\n    } catch (error) {\n      dispatch(sellerOrderListFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n    }\n  };\n};","map":{"version":3,"names":["axios","buyOrderListFail","buyOrderListRequest","buyOrderListSuccess","confirmedOrderListFail","confirmedOrderListRequest","confirmedOrderListSuccess","orderDetailFail","orderDetailRequest","orderDetailSuccess","sellerOrderListFail","sellerOrderListRequest","sellerOrderListSuccess","updateOrderFail","updateOrderRequest","updateOrderSuccess","createAPIinstance","create","baseURL","process","env","REACT_APP_BASE_API_URL","headers","withCredentials","buyList","dispatch","api","data","get","error","response","detail","message","updateOrder","orderID","updatedData","put","confirmedList","status","arguments","length","undefined","keyword","params","orderDetail","id","sellList","deliverStatus","shippingStatus"],"sources":["F:/e-Auction/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { buyOrderListFail, buyOrderListRequest, buyOrderListSuccess, confirmedOrderListFail, confirmedOrderListRequest, confirmedOrderListSuccess, orderDetailFail, orderDetailRequest, orderDetailSuccess, sellerOrderListFail, sellerOrderListRequest, sellerOrderListSuccess, updateOrderFail, updateOrderRequest, updateOrderSuccess } from \"../reducers/orderReducers\"\r\n\r\n\r\n\r\nconst createAPIinstance = () => {\r\n\r\n    return axios.create({\r\n        baseURL: `${process.env.REACT_APP_BASE_API_URL}/api/users/orders`,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        withCredentials: true\r\n    })\r\n}\r\n\r\n\r\nexport const buyList = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(buyOrderListRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get('/buying/')\r\n\r\n        dispatch(buyOrderListSuccess(data))\r\n    } catch (error) {\r\n        dispatch(buyOrderListFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updateOrder = (orderID, updatedData) => async (dispatch) => {\r\n    try {\r\n        dispatch(updateOrderRequest())\r\n\r\n        const api = createAPIinstance()\r\n\r\n        const { data } = await api.put(`/${orderID}`, updatedData)\r\n\r\n        dispatch(updateOrderSuccess(data))\r\n    } catch (error) {\r\n        dispatch(updateOrderFail(\r\n            error.message && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\n\r\nexport const confirmedList = (status=undefined, keyword=undefined) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(confirmedOrderListRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get('/buyer/', {\r\n            params: {\r\n                'isDelivered': status,\r\n                'search': keyword\r\n            }\r\n        })\r\n\r\n        dispatch(confirmedOrderListSuccess(data))\r\n    } catch (error) {\r\n        dispatch(confirmedOrderListFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderDetail = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(orderDetailRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get(`/${id}`)\r\n\r\n        dispatch(orderDetailSuccess(data))\r\n    } catch (error) {\r\n        dispatch(orderDetailFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sellList = (deliverStatus=undefined, keyword=undefined, shippingStatus=undefined) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(sellerOrderListRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get('/seller/', {\r\n            params: {\r\n                'isDelivered': deliverStatus,\r\n                'search': keyword,\r\n                'inShipping': shippingStatus,\r\n            }\r\n        })\r\n\r\n        dispatch(sellerOrderListSuccess(data))\r\n    } catch (error) {\r\n        dispatch(sellerOrderListFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}