{"ast":null,"code":"import axios from \"axios\";\nimport { addressListRequest, addressListSuccess, addressListFail, addressUpdateRequest, addressUpdateSuccess, addressUpdateFail, addressCreateRequest, addressCreateSuccess, addressCreateFail, addressDeleteRequest, addressDeleteSuccess, addressDeleteFail, addressDetailRequest, addressDetailSuccess, addressDetailFail } from '../reducers/addressReducers';\nconst createAPIinstance = () => {\n  return axios.create({\n    baseURL: `${baseURL}/api/users/addresses`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  });\n};\nexport const listAddresses = () => async dispatch => {\n  try {\n    dispatch(addressListRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.get('/');\n    dispatch(addressListSuccess(data));\n  } catch (error) {\n    dispatch(addressListFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const createAddress = address => async dispatch => {\n  try {\n    dispatch(addressCreateRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.post('/', address);\n    dispatch(addressCreateSuccess(data));\n  } catch (error) {\n    dispatch(addressCreateFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const updateAddress = address => async dispatch => {\n  try {\n    dispatch(addressUpdateRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.put(`/${address._id}/`, address);\n    await dispatch(addressUpdateSuccess(data));\n    dispatch(listAddresses());\n  } catch (error) {\n    dispatch(addressUpdateFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const deleteAddress = id => async dispatch => {\n  try {\n    dispatch(addressDeleteRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.delete(`/${id}/`);\n    await dispatch(addressDeleteSuccess(data));\n    dispatch(listAddresses());\n  } catch (error) {\n    dispatch(addressDeleteFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const addressDetail = id => async dispatch => {\n  try {\n    dispatch(addressDetailRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.get(`/${id}`);\n    dispatch(addressDetailSuccess(data));\n  } catch (error) {\n    dispatch(addressDetailFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};","map":{"version":3,"names":["axios","addressListRequest","addressListSuccess","addressListFail","addressUpdateRequest","addressUpdateSuccess","addressUpdateFail","addressCreateRequest","addressCreateSuccess","addressCreateFail","addressDeleteRequest","addressDeleteSuccess","addressDeleteFail","addressDetailRequest","addressDetailSuccess","addressDetailFail","createAPIinstance","create","baseURL","headers","withCredentials","listAddresses","dispatch","api","data","get","error","response","detail","message","createAddress","address","post","updateAddress","put","_id","deleteAddress","id","delete","addressDetail"],"sources":["F:/e-Auction/frontend/src/actions/addressActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport {\r\n    addressListRequest,\r\n    addressListSuccess,\r\n    addressListFail,\r\n\r\n    addressUpdateRequest,\r\n    addressUpdateSuccess,\r\n    addressUpdateFail,\r\n\r\n    addressCreateRequest,\r\n    addressCreateSuccess,\r\n    addressCreateFail,\r\n    \r\n    addressDeleteRequest,\r\n    addressDeleteSuccess,\r\n    addressDeleteFail,\r\n    addressDetailRequest,\r\n    addressDetailSuccess,\r\n    addressDetailFail,\r\n} from '../reducers/addressReducers'\r\n\r\nconst createAPIinstance = () => {\r\n\r\n    return axios.create({\r\n        baseURL: `${baseURL}/api/users/addresses`,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true\r\n    })\r\n\r\n}\r\n\r\nexport const listAddresses = () => async (dispatch) => {\r\n    try{\r\n        dispatch(addressListRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get('/');\r\n\r\n        dispatch(addressListSuccess(data))\r\n    }catch(error){\r\n        dispatch(addressListFail(\r\n            error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        ))\r\n    }\r\n}\r\n\r\n\r\nexport const createAddress = (address) => async (dispatch) => {\r\n    try{\r\n        dispatch(addressCreateRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.post(\r\n            '/',\r\n            address\r\n        );\r\n\r\n        dispatch(addressCreateSuccess(data))\r\n    }catch(error){\r\n        dispatch(addressCreateFail(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\nexport const updateAddress = (address) => async (dispatch) => {\r\n    try{\r\n        dispatch(addressUpdateRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.put(\r\n            `/${address._id}/`,\r\n            address\r\n        );\r\n\r\n        await dispatch(addressUpdateSuccess(data))\r\n        dispatch(listAddresses())\r\n    }catch(error){\r\n        dispatch(addressUpdateFail(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\nexport const deleteAddress = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch(addressDeleteRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.delete(`/${id}/`);\r\n\r\n        await dispatch(addressDeleteSuccess(data))\r\n        dispatch(listAddresses())\r\n    }catch(error){\r\n        dispatch(addressDeleteFail(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport const addressDetail = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(addressDetailRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get(`/${id}`)\r\n        \r\n        dispatch(addressDetailSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addressDetailFail(error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}