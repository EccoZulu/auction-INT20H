{"ast":null,"code":"import axios from \"axios\";\nimport { bidListFail, bidListRequest, bidListSuccess, bidPaidFail, bidPaidRequest, bidPaidSuccess, bidPlaceFail, bidPlaceRequest, bidPlaceSuccess, bidProductFail, bidProductRequest, bidProductSuccess } from \"../reducers/bidReducers\";\nconst createAPIinstance = () => {\n  return axios.create({\n    baseURL: `${baseURL}/api/users/bids`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  });\n};\nexport const listBids = () => async dispatch => {\n  try {\n    dispatch(bidListRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.get('/?ordering=createdAt');\n    dispatch(bidListSuccess(data));\n  } catch (error) {\n    dispatch(bidListFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const placeBid = bid => async dispatch => {\n  try {\n    dispatch(bidPlaceRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.post('/', bid);\n    dispatch(bidPlaceSuccess(data));\n  } catch (error) {\n    dispatch(bidPlaceFail(error.response && error.response.data.bid.detail ? error.response.data.bid.detail : error.message));\n  }\n};\nexport const calculateBidPaid = bid => async dispatch => {\n  try {\n    dispatch(bidPaidRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.post('/calculate-payment/', bid);\n    dispatch(bidPaidSuccess(data));\n  } catch (error) {\n    dispatch(bidPaidFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const productBids = productID => async dispatch => {\n  try {\n    dispatch(bidProductRequest());\n    const api = createAPIinstance();\n    const {\n      data\n    } = await api.get(`/product/${productID}`);\n    dispatch(bidProductSuccess(data));\n  } catch (error) {\n    dispatch(bidProductFail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};","map":{"version":3,"names":["axios","bidListFail","bidListRequest","bidListSuccess","bidPaidFail","bidPaidRequest","bidPaidSuccess","bidPlaceFail","bidPlaceRequest","bidPlaceSuccess","bidProductFail","bidProductRequest","bidProductSuccess","createAPIinstance","create","baseURL","headers","withCredentials","listBids","dispatch","api","data","get","error","response","detail","message","placeBid","bid","post","calculateBidPaid","productBids","productID"],"sources":["F:/e-Auction/frontend/src/actions/bidActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { bidListFail, bidListRequest, bidListSuccess, bidPaidFail, bidPaidRequest, bidPaidSuccess, bidPlaceFail, bidPlaceRequest, bidPlaceSuccess, bidProductFail, bidProductRequest, bidProductSuccess } from \"../reducers/bidReducers\"\r\n\r\nconst createAPIinstance = () => {\r\n\r\n    return axios.create({\r\n        baseURL: `${baseURL}/api/users/bids`,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true\r\n    })\r\n\r\n}\r\n\r\nexport const listBids = () => async (dispatch) => {\r\n    try{\r\n        dispatch(bidListRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.get('/?ordering=createdAt')\r\n\r\n        dispatch(bidListSuccess(data))\r\n    }catch(error){\r\n        dispatch(bidListFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\nexport const placeBid = (bid) => async (dispatch) => {\r\n    try{\r\n        dispatch(bidPlaceRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.post('/', bid)\r\n\r\n        dispatch(bidPlaceSuccess(data))\r\n    }catch(error){\r\n        dispatch(bidPlaceFail(\r\n            error.response && error.response.data.bid.detail ?\r\n            error.response.data.bid.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\nexport const calculateBidPaid = (bid) => async (dispatch) => {\r\n    try{\r\n        dispatch(bidPaidRequest())\r\n\r\n        const api = createAPIinstance()\r\n        const { data } = await api.post('/calculate-payment/', bid)\r\n\r\n        dispatch(bidPaidSuccess(data))\r\n    }catch(error){\r\n        dispatch(bidPaidFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n\r\nexport const productBids = (productID) => async (dispatch) => {\r\n    try{\r\n        dispatch(bidProductRequest())\r\n        \r\n        const api = createAPIinstance()\r\n        const { data } = await api.get(`/product/${productID}`)\r\n        \r\n        dispatch(bidProductSuccess(data))\r\n    }catch(error){\r\n        dispatch(bidProductFail(\r\n            error.response && error.response.data.detail ?\r\n            error.response.data.detail :\r\n            error.message\r\n        ))\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}